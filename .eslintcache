[{"C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\index.js":"1","C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\reportWebVitals.js":"2","C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\App.js":"3","C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\components\\Song.js":"4","C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\components\\Player.js":"5","C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\data.js":"6","C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\components\\Library.js":"7","C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\components\\LibrarySong.js":"8","C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\components\\Nav.js":"9","C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\util.js":"10"},{"size":479,"mtime":1610642076738,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":2425,"mtime":1611326371226,"results":"14","hashOfConfig":"12"},{"size":300,"mtime":1610755898458,"results":"15","hashOfConfig":"12"},{"size":3416,"mtime":1611325072279,"results":"16","hashOfConfig":"12"},{"size":2217,"mtime":1610659965447,"results":"17","hashOfConfig":"12"},{"size":689,"mtime":1611264703469,"results":"18","hashOfConfig":"12"},{"size":1077,"mtime":1611325239601,"results":"19","hashOfConfig":"12"},{"size":518,"mtime":1611262659642,"results":"20","hashOfConfig":"12"},{"size":288,"mtime":1611319501961,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"qwmbs1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\index.js",[],["46","47"],"C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\reportWebVitals.js",[],"C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\App.js",[],"C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\components\\Song.js",[],"C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\components\\Player.js",["48","49"],"import React, { useEffect } from \"react\";\r\nimport { playAudio } from \"../util\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faPause,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  songs,\r\n  setSongs,\r\n  currentSong,\r\n  setCurrentSong,\r\n  setIsPlaying,\r\n  isPlaying,\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n}) => {\r\n  //Use Effect\r\n  useEffect(() => {\r\n    const newSongs = songs.map((s) => {\r\n      if (s.id === currentSong.id) {\r\n        return {\r\n          ...s,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...s,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  }, [currentSong]);\r\n\r\n  // Event Handlers\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo = { ...songInfo, currentTime: e.target.value };\r\n  };\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n\r\n    if (direction === \"skip-forward\") {\r\n      if (currentIndex !== songs.length - 1) {\r\n        await setCurrentSong(songs[currentIndex + 1]);\r\n      } else {\r\n        await setCurrentSong(songs[0]);\r\n      }\r\n    } else {\r\n      if (currentIndex !== 0) {\r\n        await setCurrentSong(songs[currentIndex - 1]);\r\n      } else {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n      }\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n    //playAudio(isPlaying, audioRef);\r\n  };\r\n\r\n  //formats time into pretty audio clock\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  //add styles\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime || 0)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n          />\r\n\r\n          <div style={trackAnim} className=\"animate-track\">\r\n            {\" \"}\r\n          </div>\r\n        </div>\r\n        <p>{getTime(songInfo.duration || 0)}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\data.js",[],"C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\components\\Library.js",[],"C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\components\\LibrarySong.js",["50"],"import React from \"react\";\r\nimport {playAudio} from '../util';\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setSongs,\r\n  setCurrentSong,\r\n  id,\r\n  audioRef,\r\n  isPlaying,\r\n}) => {\r\n  const songSelectHandler = async (e) => {\r\n    await setCurrentSong(song);\r\n    //add active state\r\n    // map lets us \"for Each s in Songs\"\r\n    const newSongs = songs.map((s) => {\r\n      if (s.id === id) {\r\n        return {\r\n          ...s,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...s,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n\r\n    //check if song is playing\r\n    if (isPlaying) audioRef.current.play();\r\n    //playAudio(isPlaying, audioRef);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img src={song.cover} alt={song.name}></img>\r\n      <div className=\"song-desciption\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\components\\Nav.js",["51"],"import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { fontAwesomeIcon } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","C:\\Users\\liamz\\Documents\\ReactCourse\\Chapter3\\react-player\\src\\util.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":38,"column":6,"nodeType":"62","endLine":38,"endColumn":19,"suggestions":"63"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":9,"nodeType":"58","messageId":"59","endLine":2,"endColumn":18},{"ruleId":"56","severity":1,"message":"64","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":25},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'playAudio' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["67"],"'fontAwesomeIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"70","text":"71"},[745,758],"[currentSong, setSongs, songs]"]